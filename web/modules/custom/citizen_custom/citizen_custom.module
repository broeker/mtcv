<?php

/**
 * @file
 * Contains citizen_custom.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function citizen_custom_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the citizen custom module.
    case 'help.page.citizen_custom':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Custom glue module for Electric Citizen sites') . '</p>';
      return $output;

    default:
  }
}



/**
 * Implements hook_theme().
 */
function citizen_custom_theme() {
  return [
    'citizen_custom' => [
      'template' => 'citizen_custom',
      'render element' => 'children',
    ],
    'site_search' => [
      'variables' => [
        'title' => 'Site Search',
      ],
    ],
  ];
}

/**
 * Implements hook_preprocess_html to get roles.
 */
function citizen_custom_preprocess_html(&$variables){
  /* Find the current user */
  $user = \Drupal::currentUser();
  $userRole = $user->getRoles();
  foreach($userRole as $role ){
    if($role != 'authenticated'){
      $variables['attributes']['class'][] = 'role-' . $role;
    }
  }
}

/**
 * Implements hook_local_tasks_alter().
 */
function citizen_custom_local_tasks_alter(&$local_tasks) {
  $local_tasks['system.admin_content']['title'] = 'Pages';
}

/**
 * Implements hook_local_actions_alter().
 */
function citizen_custom_menu_local_actions_alter(&$local_actions) {
  $local_actions['node.add_page']['title'] = 'Add Page';
}

/**
 * Implements hook_form_alter().
 */
function citizen_custom_form_alter(&$form, FormStateInterface $form_state) {
  $formId = $form['#id'];
  //clean up menu link form for non-admins
  if($formId == 'menu-link-content-menu-link-content-form'){
    $user = \Drupal::currentUser();
    $userRole = $user->getRoles();
    $form['title']['#prefix'] = '<div class="form-item-prefix">Go back to the <a href="/admin/structure/menu/manage/main/">main menu</a>.</div>';
    if((in_array('editor', $userRole)) || (in_array('site_manager', $userRole))){
      unset($form['description'],$form['weight'],$form['expanded'],$form['link']['widget'][0]['options']);
    }
  } //End menu content link form alter
  
  //alter taxononmy forms
  if(isset($form['vid']['#value'])){
    $vocab = $form['vid']['#value'];
    $human = ucwords(str_replace('_',' ',$vocab));
    if(isset($form['tid']['#value'])){
      $form['name']['#prefix'] = '<div class="form-item-prefix">Edit this <span>'.$human.'</span> term or return to the <a href="/admin/structure/taxonomy/manage/'.$vocab.'/overview">terms list</a>.</div>';
    }else{
      $form['name']['#prefix'] = '<div class="form-item-prefix">Add a new <span>'.$human.'</span> term or return to the <a href="/admin/structure/taxonomy/manage/'.$vocab.'/overview">terms list</a>.</div>';
    }
  }
}
