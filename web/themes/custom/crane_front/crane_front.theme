<?php

/**
 * @file
 * Functions to support theming in the Adminimal theme.
 */
use Drupal\Core\Template\Attribute;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_page_alter.
 */
function crane_front_preprocess_page(&$variables) {
  $node = Drupal::request()->attributes->get('node');
  if ($node) {
    if ((!$node instanceof NodeInterface) && ($node_revision = \Drupal::routeMatch()->getParameter('node_revision'))) {
      $node = \Drupal::entityTypeManager()->getStorage('node')->loadRevision($node_revision);
    }
    $variables['currentId'] = $node;
  }
}

/**
 * Implements hook_page_alter.
 */
function crane_front_preprocess_block(&$variables) {
  //find the logged in user's first name and pass to branding block
  if ($variables['plugin_id']) {
    if ($variables['plugin_id'] == 'system_branding_block') {
      $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
      $variables['fname'] = $user->field_first_name;
    }
  }
}

/**
 * Implements hook_theme_suggestions_block_alter.
 */
function crane_front_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    $block_name = str_replace(' ','_',strtolower($variables['elements']['content']['#block_content']->label()));
    array_splice($suggestions, 1, 0, 'block__' . $variables['elements']['content']['#block_content']->bundle());
    array_splice($suggestions, 2, 0, 'block__' . $block_name);
    array_splice($suggestions, 3, 0, 'block__' . $variables['elements']['content']['#block_content']->id());
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function crane_front_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#form_id'])) {
    $id = $variables['element']['#form_id'];
    array_push($suggestions, 'form__' . $id);
  }
}